#!/bin/python3
#
# Danwand Init Servvice
#
#   220408  PLH First version
#   221231  PLH Logging to journal
#
# Check connections to wifi, internet and danwand service
# If no connection switch to config mode
#

# pylint: disable=logging-not-lazy, logging-fstring-interpolation

import os
import platform
import sys
#import datetime
import time
import subprocess
import logging
#from systemd.journal import JournalHandler

#from pathlib import Path

DIAS_LED_PIN = 12
FLASH_LED_PIN = 13
INTERNET_HOST = "8.8.8.8"
DANBOTS_HOST = "live.danbots.com"
START_COUNTER = 6       #  6 minutes (10 sec)
SERVICE_COUNTER = 3         # minutes
INITIAL_SLEEP_TIME = 60 # seconds

_DEVEL = False
_DEBUG = True
_SIMLED = True

if not _SIMLED:
    from gpiozero import LED    # pylint: disable=import-error
    dias = LED(DIAS_LED_PIN)
    flash = LED(FLASH_LED_PIN)

def set_initial_check_state():
    "indicate we are in the initial check"
    log.debug("Initial check started")
    if not _SIMLED:
        dias.on()

def set_normal_check_state():
    "indicate we are running"
    log.debug("Normalcheck started")
    if not _SIMLED:
        dias.off()

def set_config_mode():
    "Move to config mode"
    log.debug("Going to config mode")
    if not _SIMLED:
        flash.on()

def check_connection(host):
    "Check the connection to host by pinging it"
    param = '-n' if platform.system().lower()=='windows' else '-c'
    command = ['ping', '-q', param, '1', host]
    result = subprocess.run(command, stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL, check=False)
    if result.returncode != 0:
        if _DEBUG:
            log.warning("Cannot ping " + host)
        return False
    return True

def wifi_connected():
    "check if connected to wifi"
    return True
    # todo implement stable
    # out = subprocess.check_output("iwgetid", shell=True)

    # if len(out)==0:
    #     print("No WIFI connection")
    #     return False
    # print("Wifi connected: ",out)
    # return out

def check_connections():
    "Check all connectivity"
    if not wifi_connected():
        log.warning("No wifi connection")
    if not check_connection(INTERNET_HOST):
        log.warning("connection to " + INTERNET_HOST + " - down")
    if check_connection(DANBOTS_HOST):
        return True
    log.warning("connection to " + DANBOTS_HOST + " - down")
    if check_connection(INTERNET_HOST):
        return True
    log.warning("connection to " + INTERNET_HOST + " - down")
    # wifi_status = wifi_connected()
    # if not wifi_status:
    #     print("No Connection to WiFi")
    wifi_status = wifi_connected()
    if not wifi_status:
        log.warning("No Connection to WiFi: " + str(wifi_status))
    # else:
    #     print(wifi_status)
    return False

def get_active_wifi_stations():
    "Get the number of connected stations to wifi access point"
    #print(os.name)
    if os.name != "nt":
        out = subprocess.check_output("iw dev wlan0 station dump | grep Station | wc -l", shell=True)
    else:
        out = 0
    log.info("Number active stations: " + str(out))
    return out

if len(sys.argv)>1:
    if sys.argv[1] == "-d":
        print("Setting Debug")
        _DEBUG = True

hostname = os.uname()[1]
log = logging.getLogger("dw_init")
#log.addHandler(JournalHandler())
log.addHandler(logging.StreamHandler(sys.stdout))
#logging.basicConfig(filename='example.log', encoding='utf-8', level=logging.DEBUG)
if _DEBUG:
    #create formatter
    formatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')
    #fh = logging.FileHandler("logfile.log", mode='a', encoding='utf-8')
    fh = logging.StreamHandler()
    fh.setFormatter(formatter)
    log.addHandler(fh)

log.error("Test")
log.setLevel(logging.INFO)
log.warning(f"DanWand INIT service Starting on {hostname}")


starttime = time.time()
COUNTER = 0
RUNNING = True
time.sleep(INITIAL_SLEEP_TIME)
log.info("Chekking initial connection")
RUNNING=check_connections()
log.info("initial check: " + str(RUNNING))
# start check
set_initial_check_state()
while RUNNING:
    if wifi_connected():
        log.debug("wifi connected")
        if check_connection(INTERNET_HOST):
            log.debug("internet access OK " + INTERNET_HOST)
            if _DEVEL or check_connection(DANBOTS_HOST):
                log.debug("connection to " + DANBOTS_HOST)
                break
    log.warning("Lost connection: " + str(COUNTER))
    COUNTER +=1
    if COUNTER > START_COUNTER:
        RUNNING=False
    time.sleep(10)

log.info("Going to normal Checks " + str(RUNNING))

set_normal_check_state()

#log.info("Wand connected")
COUNTER = 0
while RUNNING:
    CONNECTED = check_connections()
    log.debug("Chek_connections " + str(CONNECTED))
    if CONNECTED:
        COUNTER = 0
    else:
        COUNTER +=1
        log.debug("bad connection: " + str(COUNTER) + "/" +
                  str(SERVICE_COUNTER))
    if COUNTER > SERVICE_COUNTER:
        RUNNING=False
    time.sleep(60)

log.warning("Going to Config mode")
set_config_mode()
subprocess.run('sudo systemctl --message="Config rebooting" isolate config.target', shell=True, check=False)
log.info("INIT.service ending")
